buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'jacoco'

android {
  dataBinding {
    enabled = true
  }
  packagingOptions {
    exclude 'META-INF/services/javax.annotation.processing.Processor'
  }
  compileSdkVersion 25
  buildToolsVersion "25.0.1"

  defaultConfig {
    applicationId "com.fred.inventory"
    minSdkVersion 22
    targetSdkVersion 25
    versionCode 1
    versionName "1.0"
    vectorDrawables.useSupportLibrary = true
    jackOptions {
      enabled true
    }
  }
  buildTypes {
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }
}

def supportLibrariesVersion = '25.0.1'

dependencies {
  annotationProcessor 'com.squareup.dagger:dagger-compiler:1.2.2'
  annotationProcessor 'com.github.frankiesardo:icepick-processor:2.3.6'

  compile fileTree(dir: 'libs', include: ['*.jar'])
  compile "com.android.support:appcompat-v7:$supportLibrariesVersion"
  compile "com.android.support:cardview-v7:$supportLibrariesVersion"
  compile "com.android.support:design:$supportLibrariesVersion"
  compile 'com.squareup.retrofit:retrofit:1.9.0'
  compile 'io.reactivex:rxandroid:1.1.0'
  compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
  compile 'com.squareup.okhttp:okhttp:2.0.0'
  compile 'com.squareup.dagger:dagger:1.2.2'
  compile 'com.jakewharton.timber:timber:4.1.1'
  compile 'com.android.support.constraint:constraint-layout:1.0.0-beta4'
  compile 'com.github.frankiesardo:icepick:2.3.6'
  compile 'com.github.clans:fab:1.6.4'
  compile 'com.journeyapps:zxing-android-embedded:3.4.0'
  compile 'nl.qbusict:cupboard:2.2.0'
  compile 'nl.littlerobots.cupboard-tools:provider:0.3.1'
  compile 'nl.littlerobots.cupboard-tools:gson:0.3.1'

  testCompile 'junit:junit:4.12'
  testCompile 'org.mockito:mockito-core:2.0.39-beta'
  testCompile('com.squareup.assertj:assertj-android:1.0.0') {
    exclude module: 'support-annotations'
  }
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }
}

task jacocoTestReport(type: JacocoReport) {
  group = "Reporting"
  description = "Generate Jacoco coverage reports"

  classDirectories =
      fileTree(dir: "${project.rootDir}/${project.name}/build/intermediates/classes/debug",
          excludes: project.jacocoExcludes)

  additionalSourceDirs = files(project.coverageSourceDirs)
  sourceDirectories = files(project.coverageSourceDirs)
  executionData = fileTree(dir: 'build/jacoco', include: '**/*.exec')

  reports {
    xml.enabled = true
    html.enabled = true
  }
}

